<?php
/**
 * @file
 * Code for the FJ16 Programme and job tool feature.
 */

include_once 'fj16_programme_and_job_tool.features.inc';

define('FJ16_BULK_JOBS_LIST', '{D99DB96C-696B-493E-9ABE-6314FC853B39}');
define('FJ16_SKILL_AREA_PREFIX', 'Osaamisalue: ');

/**
 * Implements hook_fj16_lists_to_sync
 */
function fj16_programme_and_job_tool_fj16_lists_to_sync() {
  return array(
    array(
      'source' => FJ16_BULK_JOBS_LIST,
      'destination' => 'fj16_bulk_job'
    )
  );
}

function fj16_programme_and_job_tool_fj16_sharepoint_api_row_presave_alter(&$node, &$sp_item) {
  print('PRESAVE: ' . $node->title . ' = ' . $sp_item['title'] . "\n");

  //TODO Set job type
  
  $node->field_localized_title['fi'][0]['value'] = $sp_item['title'];
  $node->field_localized_title['sv'][0]['value'] = $sp_item['pestin_x0020_nimi_x0020_ruotsiks'];
  $node->field_localized_title['en'][0]['value'] = $sp_item['pestin_x0020_nimi_x0020_englanni'];

  $node->field_job_description['fi'][0]['value'] = $sp_item['pestin_x0020_kuvaus'];
  $node->field_job_description['sv'][0]['value'] = $sp_item['pestin_x0020_kuvaus_x0020_ruotsi'];
  $node->field_job_description['en'][0]['value'] = $sp_item['pestin_x0020_kuvaus_x0020_englan'];

  $node->field_contact_name[LANGUAGE_NONE][0]['value'] = $sp_item['lis_x00e4_tietoja_x0020_antaa'];
  $node->field_contact_phone[LANGUAGE_NONE][0]['value'] = $sp_item['lis_x00e4_tietoja_x0020_antaa_x0'];
  $node->field_contact_email[LANGUAGE_NONE][0]['value'] = $sp_item['lis_x00e4_tietoja_x0020_antaa_x00'];

  $node->field_inventory_minimum[LANGUAGE_NONE][0]['value'] = $sp_item['varasto_x0020_min'];
  $node->field_inventory_maximum[LANGUAGE_NONE][0]['value'] = $sp_item['varasto_x0020_max'];
  $node->field_inventory_reserved[LANGUAGE_NONE][0]['value'] = $sp_item['varasto_x0020_nyt'];

  $image_parts = explode(',', $sp_item['kuva']);
  $image_url = $image_parts[0];
  print "  <$image_url>\n";
  $node->field_image_url[LANGUAGE_NONE][0]['value'] = $image_url;
  //TODO Download image and save it to the image field if url has changed

  $tag_names = fj16_programme_and_job_tool_parse_categories($sp_item['avainsanat']);
  $node->field_tags['fi'] = fj16_programme_and_job_tool_produce_tids_for('bulk_jobs_tags', $tag_names['tags'], 'fi');
  $node->field_tags['sv'] = fj16_programme_and_job_tool_produce_tids_for('bulk_jobs_tags', $tag_names['tags'], 'sv');
  $node->field_tags['en'] = fj16_programme_and_job_tool_produce_tids_for('bulk_jobs_tags', $tag_names['tags'], 'en');
  $node->field_skill_areas['fi'] = fj16_programme_and_job_tool_produce_tids_for('bulk_jobs_skill_areas', $tag_names['skill_areas'], 'fi');
  $node->field_skill_areas['sv'] = fj16_programme_and_job_tool_produce_tids_for('bulk_jobs_skill_areas', $tag_names['skill_areas'], 'sv');
  $node->field_skill_areas['en'] = fj16_programme_and_job_tool_produce_tids_for('bulk_jobs_skill_areas', $tag_names['skill_areas'], 'en');
}

function fj16_programme_and_job_tool_parse_categories($raw_tags) {
  $result = array(
    'tags' => array(),
    'skill_areas' => array()
  );

  $parts = explode(';#', $raw_tags);
  foreach($parts as $part) {
    if($part === '') {
      continue;
    } else if(strpos($part, FJ16_SKILL_AREA_PREFIX) === 0) {
      $result['skill_areas'][] = substr($part, strlen(FJ16_SKILL_AREA_PREFIX));
    } else {
      $result['tags'][] = $part;
    }
  }

  return $result;
}

function fj16_programme_and_job_tool_produce_tids_for($vocabulary_name, $tag_names, $lang) {
  $vocabulary = taxonomy_vocabulary_machine_name_load($vocabulary_name);
  
  $tids = array();
  foreach($tag_names as $tag_name) {
    $term = fj16_programme_and_job_tool_find_or_create_term($vocabulary, $tag_name, $lang);
    $tids[] = array(
      'tid' => $term->tid
    );
  }

  return $tids;
}

function fj16_programme_and_job_tool_find_or_create_term($vocabulary, $sp_tag_name, $lang) {
  $term = fj16_programme_and_job_tool_find_term_by_sp_tag($vocabulary, $sp_tag_name, $lang);
  
  if($term === NULL) {
    $term = new stdClass();
    $term->name = $sp_tag_name;
    $term->vid = $vocabulary->vid;
    $term->language = $lang;
    $term->field_sharepoint_name = array(
      $lang => array(array('value' => $sp_tag_name))
    );
    taxonomy_term_save($term);
  }

  return $term;
}

function fj16_programme_and_job_tool_find_term_by_sp_tag($vocabulary, $sp_tag_name, $lang) {
  $tid = db_select('field_data_field_sharepoint_name', 'f')
    ->condition('entity_type', 'taxonomy_term')
    ->condition('bundle', $vocabulary->machine_name)
    ->condition('language', $lang)
    ->condition('field_sharepoint_name_value', $sp_tag_name)
    ->fields('f', array('entity_id'))
    ->execute()
    ->fetchField();

  if($tid === FALSE) {
    return NULL;
  }

  return taxonomy_term_load($tid);
}

