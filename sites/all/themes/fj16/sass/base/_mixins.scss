// Retina images

@mixin at2x($filename, $width: auto, $height: auto, $extension: png) {
	background-image: url(../img/#{$filename}.#{$extension});
	background-size: $width $height;

	@media (min--moz-device-pixel-ratio: 1.3), (-o-min-device-pixel-ratio: 2.6/2), (-webkit-min-device-pixel-ratio: 1.3), (min-device-pixel-ratio: 1.3), (min-resolution: 1.3dppx) {
		background-image: url(../img/#{$filename}@2x.#{$extension});
	}
}

// Media queries

@mixin respond($size) { // Default direction is from desktop to mobile
	@if $size == mobile {
		@media only screen and (max-width: $break-mobile) { @content; }
	}
	@else if $size == small {
		@media only screen and (max-width: $break-small) { @content; }
	}
	@else if $size == medium {
		@media only screen and (max-width: $break-medium) { @content; }
	}
	@else if $size == large {
		@media only screen and (max-width: $break-large) { @content; }
	}
	@else {
		@media only screen and (max-width: $size) { @content; }
	}
}


@mixin respondMin($size) {
	@if $size == mobile {
		@media only screen and (min-width: $break-mobile + 1) { @content; }
	}
	@else if $size == small {
		@media only screen and (min-width: $break-small + 1) { @content; }
	}
	@else if $size == medium {
		@media only screen and (min-width: $break-medium + 1) { @content; }
	}
	@else if $size == large {
		@media only screen and (min-width: $break-large + 1) { @content; }
	}
	@else {
		@media only screen and (min-width: $size) { @content; }
	}
}